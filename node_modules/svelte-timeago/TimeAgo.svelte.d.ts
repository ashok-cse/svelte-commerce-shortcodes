import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        /**
             * @description Date should be a valid Date object, a valid UNIX timestamp or a valid date string, preferably in ISO-8601 format.
             * @default new Date().getTime()
             * @type {(number|string|Date)}
             */ date?: number | string | Date;
        /**
             * @description Should the displayed time update every 1 second?
             * @default false
             */ live?: boolean;
        /**
             * @description Should the word ago be displayed after the time?
             * @default true
             */ withSuffix?: boolean;
        /**
             * @description The suffix used when `withSuffix` is set to true.
             * @default 'ago'
             */ suffix?: string;
        /**
             * @description Should the suffix be a prefix? Useful for some languages like French. i.e. 'il y à {n}{unit}'
             */ asPrefix?: boolean;
        /**
             * @description The units to be displayed. Can also be used to set your own locale. i.e. 秒、分、時間 etc.
             * @default {seconds:'s',minutes:'m',hours:'h',days:'d',months:'mo',years:'y'}
             */ units?: {
            seconds?: string;
            minutes?: string;
            hours?: string;
            days?: string;
            months?: string;
            years?: string;
        };
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type TimeAgoProps = typeof __propDef.props;
export declare type TimeAgoEvents = typeof __propDef.events;
export declare type TimeAgoSlots = typeof __propDef.slots;
export default class TimeAgo extends SvelteComponentTyped<TimeAgoProps, TimeAgoEvents, TimeAgoSlots> {
}
export {};
